# ~ General

alias rm="rm -I"
alias C="clear"
if test -e "$(command -v eza)"
    alias ls="eza -a --color=always --icons=always --group-directories-first"
    alias la="eza -aG --color=always --icons=always --group-directories-first"
    alias ll="eza -la --color=always --icons=always --group-directories-first"
    alias lT="eza -aT -L 2 --color=always --icons=always --group-directories-first"
    alias lt="eza -aT -L 1 --color=always --icons=always --group-directories-first"
    alias l.="eza -af --color=always --icons=always --group-directories-first"
    alias lp="eza -a --color=never --icons=never --group-directories-first"
else if test -e "$(command -v exa)"
    alias ls="exa -a --color=always --icons=always --group-directories-first"
    alias la="exa -aG --color=always --icons=always --group-directories-first"
    alias ll="exa -la --color=always --icons=always --group-directories-first"
    alias lT="exa -aT -L 2 --color=always --icons=always --group-directories-first"
    alias lt="exa -aT -L 1 --color=always --icons=always --group-directories-first"
    alias l.="exa -af --color=always --icons=always --group-directories-first"
    alias lp="exa -a --color=never --icons=never --group-directories-first"
else
    alias ls="ls -a --color=always --group-directories-first"
    alias l.="ls -A | grep -E '^\.' --group-directories-first"
    alias la="ls -a --color=always --group-directories-first"
    alias ll="ls -la --color=always --group-directories-first"
    alias lp="ls -a --color=never --group-directories-first"
end

alias v="nvim"
alias nv="neovide"

abbr -a ts tree-sitter

# ~ Git

alias dotfiles="/usr/bin/git --git-dir=$HOME/Dotfiles/ --work-tree=$HOME"
alias dtflsu="dotfiles add .config/{fish,bash,zsh,starship,alacritty,wezterm,foot,kitty,tmux,hypr,nvim,vim,emacs,neovide,moxide,mdt,glow,tofi,firefoxcss,nnn,bat,btop,mako,fontconfig,vimiumc,zathura,zed,ruff}/ .local/bin/ .zshenv .gitignore"
alias dtflsa="dotfiles add"
alias dtflss="dotfiles status"
alias dtflsc="dotfiles commit -m"
abbr -a gs "git status"
abbr -a ga "git add"
abbr -a ga. "git add ."
abbr -a grs "git restore --staged"
abbr -a gr "git restore"
abbr -a gst "git stash"
abbr -a gstp "git stash pop"
abbr -a gc "git commit"
abbr -a gf "git fetch"
abbr -a gm "git merge"
abbr -a gpl "git pull --rebase"
abbr -a gps "git push"
abbr -a gch "git checkout"
abbr -a gb "git branch"
abbr -a gl 'git log --pretty="%h » ¦ « %aN » ¦ « %s » ¦ « %aD"'

# ~ Package managers

if test $SYSTEM_PACKAGE_MANAGER = apt
    abbr -a ad "sudo apt update"
    abbr -a ag "sudo apt upgrade"
    abbr -a auu "sudo apt update && sudo apt upgrade"
    abbr -a ai "sudo apt install"
    abbr -a ari "sudo apt reinstall"
    abbr -a ar "sudo apt remove"
    abbr -a aar "sudo apt autoremove"
    abbr -a ap "sudo apt purge"
    abbr -a ac "sudo apt clean"
    abbr -a aac "sudo apt autoclean"
    abbr -a as "sudo apt search"
    abbr -a ash "sudo apt show"
    abbr -a al "sudo apt list"
    abbr -a agd "sudo apt-get update"
    abbr -a agg "sudo apt-get upgrade"
    abbr -a aguu "sudo apt-get update && sudo apt-get upgrade"
    abbr -a agi "sudo apt-get install"
    abbr -a agri "sudo apt-get reinstall"
    abbr -a agr "sudo apt-get remove"
    abbr -a agp "sudo apt-get purge"
    abbr -a agar "sudo apt-get autoremove"
    abbr -a agssfy "sudo apt-get satisfy"
    abbr -a agc "sudo apt-get clean"
    abbr -a agac "sudo apt-get autoclean"
    abbr -a agchk "sudo apt-get check"
    abbr -a agsrc "sudo apt-get source"
    abbr -a agdl "sudo apt-get download"
else if test $SYSTEM_PACKAGE_MANAGER = dnf
    abbr -a dnfu "sudo dnf upgrade --refresh"
    abbr -a dnfi "sudo dnf install"
    abbr -a dnfgi "sudo dnf groupinstall"
    abbr -a dnfr "sudo dnf remove"
    abbr -a dnfar "sudo dnf autoremove"
    abbr -a dnfgr "sudo dnf groupremove"
    abbr -a dnfc "sudo dnf clean all"
    abbr -a dnfs "sudo dnf search"
    abbr -a dnfl "sudo dnf list"
    abbr -a dfnli "sudo dnf list installed"
    abbr -a dnfgl "sudo dnf grouplist"
    abbr -a dnfh "dnf help"
else if test $SYSTEM_PACKAGE_MANAGER = pacman
    abbr -a pi "sudo pacman -S --needed"
    abbr -a pu "sudo pacman -Syu"
    abbr -a pr "sudo pacman -Rn"
    abbr -a pq "sudo pacman -Qs"
    abbr -a ps "sudo pacman -Ss"
else
    echo "[ ERROR ] | Please set the SYSTEM_PACKAGE_MANAGER environment variable to the name of your system package manager."
end
